{"version":3,"sources":["service.js","App.js","index.js"],"names":["axios","defaults","baseURL","interceptors","response","use","error","console","data","message","Promise","reject","async","get","post","name","id","isComplete","put","delete","success","App","newTodo","setNewTodo","useState","todos","setTodos","getTodos","service","useEffect","React","createElement","className","onSubmit","e","preventDefault","placeholder","value","onChange","target","style","display","map","todo","key","type","defaultChecked","updateCompleted","checked","onClick","deleteTodo","ReactDOM","render","document","getElementById"],"mappings":"wMACAA,IAAMC,SAASC,QAAQ,wBAGvBF,IAAMG,aAAaC,SAASC,IAC1BD,GAESA,EAETE,IAEEC,QAAQD,MAAM,kDAAqBA,EAAMF,SAAWE,EAAMF,SAASI,KAAOF,EAAMG,SACzEC,QAAQC,OAAOL,KAIX,MACHM,UACR,IAEE,aADuBZ,IAAMa,IAAI,UACjBL,KAChB,MAAOF,GAEP,MADAC,QAAQD,MAAM,wBAAyBA,GACjCA,IAPG,EAWJM,UACP,IAEE,aADuBZ,IAAMc,KAAK,QAAS,CAAEC,UAC7BP,KAChB,MAAOF,GAEP,MADAC,QAAQD,MAAM,qBAAsBA,GAC9BA,IAjBG,EAqBCM,MAAOI,EAAIC,KACvB,IAEE,aADuBjB,IAAMkB,IAAI,SAASF,EAAM,CAAEC,gBAClCT,KAChB,MAAOF,GAEP,MADAC,QAAQD,MAAM,kCAAmCA,GAC3CA,IA3BG,EA+BDM,UACV,IAEE,aADMZ,IAAMmB,OAAO,SAASH,GACrB,CAAEI,SAAS,GAClB,MAAOd,GAEP,MADAC,QAAQD,MAAM,uBAAwBA,GAChCA,ICOGe,MAzDf,WACE,MAAOC,EAASC,GAAcC,mBAAS,KAChCC,EAAOC,GAAYF,mBAAS,IAEnCZ,eAAee,IACb,MAAMF,QAAcG,IACpBF,EAASD,GAwBX,OAJAI,oBAAU,KACRF,KACC,IAGDG,IAAAC,cAAA,WAASC,UAAU,WACjBF,IAAAC,cAAA,UAAQC,UAAU,UAChBF,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,QAAME,SAzBZrB,eAA0BsB,GACxBA,EAAEC,uBACIP,EAAgBN,GACtBC,EAAW,UACLI,MAsBAG,IAAAC,cAAA,SAAOC,UAAU,WAAWI,YAAY,8BAA8BC,MAAOf,EAASgB,SAAWJ,GAAMX,EAAWW,EAAEK,OAAOF,WAG/HP,IAAAC,cAAA,WAASC,UAAU,OAAOQ,MAAO,CAAEC,QAAS,UAC1CX,IAAAC,cAAA,MAAIC,UAAU,aACXP,EAAMiB,IAAIC,GAEPb,IAAAC,cAAA,MAAIC,UAAWW,EAAK1B,WAAa,YAAc,GAAI2B,IAAKD,EAAK3B,IAC3Dc,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,SAAOC,UAAU,SAASa,KAAK,WAAWC,eAAgBH,EAAK1B,WAAYqB,SAAWJ,GA5BtGtB,eAA+B+B,EAAM1B,SAC7BW,EAAqBe,EAAK3B,GAAIC,SAC9BU,IA0BoGoB,CAAgBJ,EAAMT,EAAEK,OAAOS,WAC3HlB,IAAAC,cAAA,aAAQY,EAAK5B,MACbe,IAAAC,cAAA,UAAQC,UAAU,UAAUiB,QAASA,IAzBrDrC,eAA0BI,SAClBY,EAAmBZ,SACnBW,IAuBmDuB,CAAWP,EAAK3B,aC7C7EmC,IAASC,OAAOtB,IAAAC,cAACV,EAAG,MAAKgC,SAASC,eAAe,W","file":"static/js/main.8a1d165a.chunk.js","sourcesContent":["import axios from 'axios';\r\naxios.defaults.baseURL=\"http://localhost:5034\"\r\n\r\n// הוספת interceptor לשגיאות\r\naxios.interceptors.response.use(\r\n  response => {\r\n    // אם התגובה היא חיובית, מחזירים את התגובה\r\n    return response;\r\n  },\r\n  error => {\r\n    // במקרה של שגיאה, רושמים ללוג\r\n    console.error('שגיאה ב-response:', error.response ? error.response.data : error.message);\r\n    return Promise.reject(error); // מחזירים את השגיאה להמשך טיפול\r\n  }\r\n);\r\n\r\nexport default {\r\n  getTasks: async () => {\r\n    try {\r\n      const response = await axios.get('/Item');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n      throw error; // או טיפול בשגיאות נוסף\r\n    }\r\n  },\r\n\r\n  addTask: async (name) => {\r\n    try {\r\n      const response = await axios.post('/Item', { name });\r\n      return response.data; // החזרת הנתונים שנוצרו\r\n    } catch (error) {\r\n      console.error('Error adding task:', error);\r\n      throw error; // או טיפול בשגיאות נוסף\r\n    }\r\n  },\r\n\r\n  setCompleted: async (id, isComplete) => {\r\n    try {\r\n      const response = await axios.put(`/Item/${id}`, { isComplete });\r\n      return response.data; // החזרת הנתונים המעודכנים\r\n    } catch (error) {\r\n      console.error('Error updating task completion:', error);\r\n      throw error; // או טיפול בשגיאות נוסף\r\n    }\r\n  },\r\n\r\n  deleteTask: async (id) => {\r\n    try {\r\n      await axios.delete(`/Item/${id}`);\r\n      return { success: true }; // החזרת תוצאה מוצלחת\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n      throw error; // או טיפול בשגיאות נוסף\r\n    }\r\n  }\r\n};\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport service from './service.js';\r\n\r\nfunction App() {\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  async function getTodos() {\r\n    const todos = await service.getTasks();\r\n    setTodos(todos);\r\n  }\r\n\r\n  async function createTodo(e) {\r\n    e.preventDefault();\r\n    await service.addTask(newTodo);\r\n    setNewTodo(\"\");//clear input\r\n    await getTodos();//refresh tasks list (in order to see the new one)\r\n  }\r\n\r\n  async function updateCompleted(todo, isComplete) {\r\n    await service.setCompleted(todo.id, isComplete);\r\n    await getTodos();//refresh tasks list (in order to see the updated one)\r\n  }\r\n\r\n  async function deleteTodo(id) {\r\n    await service.deleteTask(id);\r\n    await getTodos();//refresh tasks list\r\n  }\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"todoapp\">\r\n      <header className=\"header\">\r\n        <h1>todos</h1>\r\n        <form onSubmit={createTodo}>\r\n          <input className=\"new-todo\" placeholder=\"Well, let's take on the day\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} />\r\n        </form>\r\n      </header>\r\n      <section className=\"main\" style={{ display: \"block\" }}>\r\n        <ul className=\"todo-list\">\r\n          {todos.map(todo => {\r\n            return (\r\n              <li className={todo.isComplete ? \"completed\" : \"\"} key={todo.id}>\r\n                <div className=\"view\">\r\n                  <input className=\"toggle\" type=\"checkbox\" defaultChecked={todo.isComplete} onChange={(e) => updateCompleted(todo, e.target.checked)} />\r\n                  <label>{todo.name}</label>\r\n                  <button className=\"destroy\" onClick={() => deleteTodo(todo.id)}></button>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n    </section >\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}